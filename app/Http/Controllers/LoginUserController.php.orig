<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use App\Services\RoleRightService;

class LoginUserController extends Controller
{
<<<<<<< HEAD
	public function __construct(
        RoleRightService $roleRightService
    ) {
        $this->roleRightService = $roleRightService;
    }
	public function change_password()
    {
                   $rolesPermissions = $this->roleRightService->hasPermissions("Change Password");

            $view = $rolesPermissions['view'];
            if (!$view) {
                abort(401);
            }
			$edit = $rolesPermissions['edit'];
        

        $id = \Auth::user()->id;
        return view('auth.passwords.change', compact('edit'));
    }
=======

	public function change()
    {
        $id = \Auth::user()->id;
        return view('auth.passwords.change');
    }

>>>>>>> 7a56bbd8983da85cfa7c077e5bd2a6d99f3f93d2

    public function updatePassword(Request $request) 
	{

		$user = \Auth::user();
        $hasher = app('hash');

        $validate = $request->validate([
            'current_password'      => 'required',
            'new_password'          => [
                'required', 'string', 'min:8', 'regex:/[a-z]/',
                'regex:/[A-Z]/',
                'regex:/[0-9]/',
                'regex:/[@$!%*#?&._]/'
            ],
            'new_confirm_password'  => 'same:new_password'
        ]);

        if ($hasher->check($request->current_password, $user->password)) {

            $user->update([
                'password'  => Hash::make($request->new_password)
            ]);

            \Session::flash('success', "New Password Successfully Updated, Please Re-Login");
            \Auth::logout();
            return redirect('/login');

        }

        \Session::flash('error_message', 'Something is wrong while trying to change the password');

        return back();


        // $user = \Auth::user();
        // $hasher = app('hash');

        // $validate = $request->validate([
        // 	'current_password'		=> 'required',
        // 	'new_password'			=> 'required',
        // 	'new_confirm_password'	=> 'same:new_password'
        // ]); 

        // if ($hasher->check($request->current_password, $user->password)) {

        // 	$user->update([
        // 		'password'	=> Hash::make($request->new_password)
        // 	]);

        // 	\Auth::logout();
        // 	return redirect('/login');

		// }

		// \Session::flash('error_message', 'Something is wrong while trying to change the password');

		// return back();

    }

}
